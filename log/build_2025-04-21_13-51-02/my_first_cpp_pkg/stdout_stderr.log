[ 50%] [32mBuilding CXX object CMakeFiles/my_first_node.dir/src/my_first_node.cpp.o[0m
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/utilities.hpp:19[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/logging.hpp:25[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:27[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171[m[K,
                 from [01m[K/home/neverdiedooms/ros2_test_ws/src/my_first_cpp_pkg/src/my_first_node.cpp:1[m[K:
/usr/include/c++/13/functional: In instantiation of â€˜[01m[Kstruct std::_Bind_check_arity<void (MyFirstNode::*)()>[m[Kâ€™:
[01m[K/usr/include/c++/13/functional:859:12:[m[K   required from â€˜[01m[Kstruct std::_Bind_helper<false, void (MyFirstNode::*)()>[m[Kâ€™
[01m[K/usr/include/c++/13/functional:881:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::[01;32m[Kbind[m[K(_Func&&, _BoundArgs&& ...) [35m[K[with _Func = void (MyFirstNode::*)(); _BoundArgs = {}][m[K[m[Kâ€™
[01m[K/home/neverdiedooms/ros2_test_ws/src/my_first_cpp_pkg/src/my_first_node.cpp:9:22:[m[K   required from here
[01m[K/usr/include/c++/13/functional:847:21:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: Wrong number of arguments for pointer-to-member
  846 |       static_assert(_Varargs::[01;31m[Kvalue[m[K
      |                               [01;31m[K~~~~~[m[K
  847 | [01;31m[K                    ? sizeof...(_BoundArgs) >= _Arity::value + 1[m[K
      |                     [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
  848 | [01;31m[K                    : sizeof...(_BoundArgs) == _Arity::value + 1[m[K,
      |                     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/usr/include/c++/13/functional:847:21:[m[K [01;36m[Knote: [m[Kâ€˜[01m[K(false ? (0 >= (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)) : (0 == (((long unsigned int)std::integral_constant<long unsigned int, 0>::value) + 1)))[m[Kâ€™ evaluates to false
/usr/include/c++/13/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [35m[K[with _Fn = void (MyFirstNode::*)(); _BArgs = _CallArgs; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/functional:556:8:[m[K   required from â€˜[01m[Kclass std::_Bind<void (MyFirstNode::*())()>[m[Kâ€™
[01m[K/home/neverdiedooms/ros2_test_ws/src/my_first_cpp_pkg/src/my_first_node.cpp:9:22:[m[K   required from here
[01m[K/usr/include/c++/13/functional:552:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::result_of<void (MyFirstNode::*&())()>[m[Kâ€™
  552 |         using [01;31m[K_Res_type_impl[m[K
      |               [01;31m[K^~~~~~~~~~~~~~[m[K
/usr/include/c++/13/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [35m[K[with _Fn = void (MyFirstNode::*)(); _CallArgs = std::tuple<_UTypes ...>; _BArgs = {}; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/functional:556:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs> using std::_Bind<_Functor(_Bound_args ...)>::_Res_type = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<_Functor, _CallArgs, _Bound_args ...> [35m[K[with _CallArgs = std::tuple<_UTypes ...>; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™
[01m[K/usr/include/c++/13/functional:589:2:[m[K   required from â€˜[01m[Kclass std::_Bind<void (MyFirstNode::*())()>[m[Kâ€™
[01m[K/home/neverdiedooms/ros2_test_ws/src/my_first_cpp_pkg/src/my_first_node.cpp:9:22:[m[K   required from here
[01m[K/usr/include/c++/13/functional:552:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::result_of<void (MyFirstNode::*&())()>[m[Kâ€™
In file included from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/callback_group.hpp:30[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor_options.hpp:22[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executor.hpp:38[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:172[m[K:
/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback_delegate[m[K(const rcl_timer_call_info_t&) [35m[K[with CallbackT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0; rcl_timer_call_info_t = rcl_timer_call_info_s][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:292:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback[m[K(const std::shared_ptr<void>&) [35m[K[with FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:289:3:[m[K   required from here
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:306:14:[m[K [01;31m[Kerror: [m[Kno match for call to â€˜[01m[K(std::_Bind<void (MyFirstNode::*())()>) ()[m[Kâ€™
  306 |     [01;31m[Kcallback_()[m[K;
      |     [01;31m[K~~~~~~~~~^~[m[K
[01m[K/usr/include/c++/13/functional:589:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::[01;32m[Koperator()[m[K(_Args&& ...) [35m[K[with _Args = {_Args ...}; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™
  589 |         [01;36m[Koperator[m[K()(_Args&&... __args)
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/functional:589:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[01m[K/usr/include/c++/13/functional:601:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::[01;32m[Koperator()[m[K(_Args&& ...) const [35m[K[with _Args = {_Args ...}; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™
  601 |         [01;36m[Koperator[m[K()(_Args&&... __args) const
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/functional:601:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [35m[K[with _Fn = void (MyFirstNode::* const)(); _CallArgs = std::tuple<>; _BArgs = {}; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/functional:563:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using std::_Bind<_Functor(_Bound_args ...)>::_Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [35m[K[with _CallArgs = std::tuple<>; __cv_quals = std::add_const; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™
[01m[K/usr/include/c++/13/functional:598:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback_delegate[m[K(const rcl_timer_call_info_t&) [35m[K[with CallbackT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0; rcl_timer_call_info_t = rcl_timer_call_info_s][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:292:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback[m[K(const std::shared_ptr<void>&) [35m[K[with FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:289:3:[m[K   required from here
[01m[K/usr/include/c++/13/functional:552:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::result_of<void (MyFirstNode::* const&())()>[m[Kâ€™
  552 |         using [01;31m[K_Res_type_impl[m[K
      |               [01;31m[K^~~~~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback_delegate[m[K(const rcl_timer_call_info_t&) [35m[K[with CallbackT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0; rcl_timer_call_info_t = rcl_timer_call_info_s][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:292:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback[m[K(const std::shared_ptr<void>&) [35m[K[with FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:289:3:[m[K   required from here
[01m[K/usr/include/c++/13/functional:614:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::[01;32m[Koperator()[m[K(_Args&& ...) volatile [35m[K[with _Args = {_Args ...}; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™
  614 |         [01;36m[Koperator[m[K()(_Args&&... __args) volatile
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/functional:614:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [35m[K[with _Fn = void (MyFirstNode::* volatile)(); _CallArgs = std::tuple<>; _BArgs = {}; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/functional:563:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using std::_Bind<_Functor(_Bound_args ...)>::_Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [35m[K[with _CallArgs = std::tuple<>; __cv_quals = std::add_volatile; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™
[01m[K/usr/include/c++/13/functional:611:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback_delegate[m[K(const rcl_timer_call_info_t&) [35m[K[with CallbackT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0; rcl_timer_call_info_t = rcl_timer_call_info_s][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:292:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback[m[K(const std::shared_ptr<void>&) [35m[K[with FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:289:3:[m[K   required from here
[01m[K/usr/include/c++/13/functional:552:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::result_of<void (MyFirstNode::* volatile&())()>[m[Kâ€™
  552 |         using [01;31m[K_Res_type_impl[m[K
      |               [01;31m[K^~~~~~~~~~~~~~[m[K
/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback_delegate[m[K(const rcl_timer_call_info_t&) [35m[K[with CallbackT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0; rcl_timer_call_info_t = rcl_timer_call_info_s][m[K[m[Kâ€™:
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:292:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback[m[K(const std::shared_ptr<void>&) [35m[K[with FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:289:3:[m[K   required from here
[01m[K/usr/include/c++/13/functional:626:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ... _Args, class _Result> _Result std::_Bind<_Functor(_Bound_args ...)>::[01;32m[Koperator()[m[K(_Args&& ...) const volatile [35m[K[with _Args = {_Args ...}; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™
  626 |         [01;36m[Koperator[m[K()(_Args&&... __args) const volatile
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/13/functional:626:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/13/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl = typename std::result_of<_Fn&(decltype (std::_Mu<typename std::remove_cv<_BArgs>::type, std::is_bind_expression<typename std::remove_cv<_BArgs>::type>::value, (std::is_placeholder<typename std::remove_cv<_BArgs>::type>::value > 0)>()(declval<_BArgs&>(), declval<_CallArgs&>()))&& ...)>::type [35m[K[with _Fn = void (MyFirstNode::* const volatile)(); _CallArgs = std::tuple<>; _BArgs = {}; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™:
[01m[K/usr/include/c++/13/functional:563:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs, template<class _CallArgs, template<class> class __cv_quals> template<class _Functor, class ... _Bound_args> template<class> class __cv_quals> using std::_Bind<_Functor(_Bound_args ...)>::_Res_type_cv = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<typename __cv_quals<typename std::enable_if<(bool)((std::tuple_size<_Tuple>::value + 1)), _Functor>::type>::type, _CallArgs, typename __cv_quals<_Bound_args>::type ...> [35m[K[with _CallArgs = std::tuple<>; __cv_quals = std::add_cv; _Functor = void (MyFirstNode::*)(); _Bound_args = {}][m[K[m[Kâ€™
[01m[K/usr/include/c++/13/functional:623:9:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback_delegate[m[K(const rcl_timer_call_info_t&) [35m[K[with CallbackT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void()> >::value>::type* <anonymous> = 0; FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0; rcl_timer_call_info_t = rcl_timer_call_info_s][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:292:32:[m[K   required from â€˜[01m[Kvoid rclcpp::GenericTimer<FunctorT, <anonymous> >::[01;32m[Kexecute_callback[m[K(const std::shared_ptr<void>&) [35m[K[with FunctorT = std::_Bind<void (MyFirstNode::*())()>; typename std::enable_if<((rclcpp::function_traits::same_arguments<FunctorT, std::function<void()> >::value || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(rclcpp::TimerBase&)> >::value) || rclcpp::function_traits::same_arguments<FunctorT, std::function<void(const rclcpp::TimerInfo&)> >::value)>::type* <anonymous> = 0][m[K[m[Kâ€™
[01m[K/opt/ros/jazzy/include/rclcpp/rclcpp/timer.hpp:289:3:[m[K   required from here
[01m[K/usr/include/c++/13/functional:552:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::result_of<void (MyFirstNode::* const volatile&())()>[m[Kâ€™
  552 |         using [01;31m[K_Res_type_impl[m[K
      |               [01;31m[K^~~~~~~~~~~~~~[m[K
gmake[2]: *** [CMakeFiles/my_first_node.dir/build.make:76: CMakeFiles/my_first_node.dir/src/my_first_node.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/my_first_node.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
